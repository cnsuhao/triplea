/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * RecentProjectsWindow.java
 *
 * Created on May 17, 2010, 12:07:25 AM
 */

package MainProgram.UI;

import Global.Enums.LaunchType;
import Global.ProgramMemory;
import MainProgram.ProgramLaunchers.ProgramLauncher;
import MainProgram.Project.Project;
import MainProgram.Project.RecentProjectInformation;
import MainProgram.Walkthrough.UI.WalkthroughWindow;
import java.io.File;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import org.jdesktop.application.Action;

/**
 *
 * @author Stephen
 */
public class RecentProjectsWindow extends javax.swing.JFrame
{
    private MainMenu m_mainMenu = null;
    /** Creates new form RecentProjectsWindow */
    public RecentProjectsWindow(MainMenu mainMenu)
    {
        initComponents();
        setIconImage(ProgramLauncher.getProgramIcon(this));

        m_mainMenu = mainMenu;

        LoadRecentProjects();
    }
    private ArrayList<RecentProjectInformation> TrimExtraAndInvalidProjects(ArrayList<RecentProjectInformation> list)
    {
        ArrayList<RecentProjectInformation> result = new ArrayList<RecentProjectInformation>(list);
        while (result.size() > 25)
        {
            result.remove(result.size() - 1);
        }
        for(RecentProjectInformation project : list)
        {
            if(!new File(project.GetProjectLocation()).exists())
                result.remove(project);
        }
        return result;
    }
    private RecentProjectsWindow GetThis()
    {
        return this;
    }

    private void LoadRecentProjects()
    {
        ProgramMemory memory = ProgramMemory.LoadMemory();
        memory.RecentProjects = TrimExtraAndInvalidProjects(memory.RecentProjects);
        ProgramMemory.SaveMemory(memory);

        NotEditableTableModel model = (NotEditableTableModel) v_recentProjectsList.getModel();
        while (model.getRowCount() > 0)
        {
            model.removeRow(0);
        }

        for(RecentProjectInformation project : memory.RecentProjects)
        {
            model.addRow(new Object[]{project.GetProjectFilename(),project.GetMapName(),project.GetMapVersion(),project.GetProjectLocation()});
        }
    }

    private void UpdateProjectLocation()
    {
        if(GetThis().v_recentProjectsList.getSelectedRow() > -1)
            GetThis().v_mapToLoadTextBox.setText((String)GetThis().v_recentProjectsList.getModel().getValueAt(GetThis().v_recentProjectsList.getSelectedRow(), 3));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        v_backButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        v_mapToLoadTextBox = new javax.swing.JTextField();
        v_browseButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        v_recentProjectsList = new javax.swing.JTable();
        v_loadMapButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance().getContext().getResourceMap(RecentProjectsWindow.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                WindowClosing(evt);
            }
        });

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance().getContext().getActionMap(RecentProjectsWindow.class, this);
        v_backButton.setAction(actionMap.get("CloseWindow")); // NOI18N
        v_backButton.setText(resourceMap.getString("v_backButton.text")); // NOI18N
        v_backButton.setName("v_backButton"); // NOI18N

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        v_mapToLoadTextBox.setText(resourceMap.getString("v_mapToLoadTextBox.text")); // NOI18N
        v_mapToLoadTextBox.setName("v_mapToLoadTextBox"); // NOI18N

        v_browseButton.setAction(actionMap.get("BrowseForMap")); // NOI18N
        v_browseButton.setText(resourceMap.getString("v_browseButton.text")); // NOI18N
        v_browseButton.setName("v_browseButton"); // NOI18N

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        v_recentProjectsList.setModel(new NotEditableTableModel(
            new Object [][] {

            },
            new String [] {
                "Project Filename", "Map Name", "Map Version", "Project Location"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        v_recentProjectsList.setGridColor(resourceMap.getColor("v_recentProjectsList.gridColor")); // NOI18N
        v_recentProjectsList.setName("v_recentProjectsList"); // NOI18N
        v_recentProjectsList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        v_recentProjectsList.setShowHorizontalLines(false);
        v_recentProjectsList.setShowVerticalLines(false);
        v_recentProjectsList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                ListMouseReleased(evt);
            }
        });
        v_recentProjectsList.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ListKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(v_recentProjectsList);

        v_loadMapButton.setAction(actionMap.get("LoadSpecifiedMap")); // NOI18N
        v_loadMapButton.setText(resourceMap.getString("v_loadMapButton.text")); // NOI18N
        v_loadMapButton.setName("v_loadMapButton"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(270, 270, 270)
                .addComponent(jLabel2)
                .addContainerGap(297, Short.MAX_VALUE))
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 643, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addComponent(jLabel1)
                .addGap(14, 14, 14)
                .addComponent(v_mapToLoadTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(v_browseButton)
                .addContainerGap(103, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(203, Short.MAX_VALUE)
                .addComponent(v_backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(v_loadMapButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(190, 190, 190))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabel1))
                    .addComponent(v_mapToLoadTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(v_browseButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(v_backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(v_loadMapButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-659)/2, (screenSize.height-540)/2, 659, 540);
    }// </editor-fold>//GEN-END:initComponents

    private void WindowClosing(java.awt.event.WindowEvent evt)//GEN-FIRST:event_WindowClosing
    {//GEN-HEADEREND:event_WindowClosing
        GoBack();
    }//GEN-LAST:event_WindowClosing

    @SuppressWarnings("static-access")
    private void ListKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_ListKeyPressed
    {//GEN-HEADEREND:event_ListKeyPressed
       if(evt.getKeyCode() == evt.VK_DELETE)
       {
           if (v_recentProjectsList.getSelectedRow() > -1)
           {
               if(JOptionPane.showConfirmDialog(rootPane, "Are you sure that you want to delete the selected project?","Confirm Delete",JOptionPane.YES_NO_CANCEL_OPTION) == JOptionPane.YES_OPTION)
               {
                   new File((String)v_recentProjectsList.getModel().getValueAt(v_recentProjectsList.getSelectedRow(),3)).delete();
                   ((NotEditableTableModel) v_recentProjectsList.getModel()).removeRow(v_recentProjectsList.getSelectedRow());

                   if(v_recentProjectsList.getRowCount() == 0)
                       v_mapToLoadTextBox.setText("");
               }
           }
       }
    }//GEN-LAST:event_ListKeyPressed

    private void ListMouseReleased(java.awt.event.MouseEvent evt)//GEN-FIRST:event_ListMouseReleased
    {//GEN-HEADEREND:event_ListMouseReleased
        UpdateProjectLocation();
    }//GEN-LAST:event_ListMouseReleased
    @Action
    public void CloseWindow()
    {
        GoBack();
    }

    @Action
    public void GoBack()
    {
        m_mainMenu.setVisible(true);
        this.setVisible(false);
    }

    @Action
    public void BrowseForMap()
    {
        ArrayList<FileFilter> filters = new ArrayList<FileFilter>();
        filters.add(FileOpen.CreateFilter("TripleA Map Projects", new ArrayList<String>(Arrays.asList(".tmap"))));
        FileOpen open = new FileOpen(this, "Select a map project to load", filters);
        if(open.getFilePath() != null)
            v_mapToLoadTextBox.setText(open.getFilePath());
        }

    @Action
    public void LoadSpecifiedMap()
    {
        Project project = Project.LoadProject(v_mapToLoadTextBox.getText());
        if(project == null)
            return;

        m_mainMenu.setVisible(false);
        this.setVisible(false);
        
        WalkthroughWindow window = new WalkthroughWindow(m_mainMenu, LaunchType.ContinueProject, project);
        window.setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton v_backButton;
    private javax.swing.JButton v_browseButton;
    private javax.swing.JButton v_loadMapButton;
    private javax.swing.JTextField v_mapToLoadTextBox;
    private javax.swing.JTable v_recentProjectsList;
    // End of variables declaration//GEN-END:variables

}
