/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * BaseStepContentPanel.java
 *
 * Created on May 14, 2010, 5:31:50 PM
 */

package MainProgram.Walkthrough.UI.StepContentPanels;

import MainProgram.Map.MapData;
import MainProgram.Map.Player.PlayerData;
import MainProgram.Walkthrough.UI.WalkthroughWindow;
import java.util.ArrayList;
import java.util.List;
import java.util.TreeMap;
import javax.swing.JOptionPane;

/**
 *
 * @author Stephen
 */
public class Segment2Step3ContentPanel_All extends BaseStepContentPanel {

    /** Creates new form BaseStepContentPanel */
    public Segment2Step3ContentPanel_All()
    {
        initComponents();
    }
    private TreeMap<String, PlayerData> m_players = new TreeMap<String, PlayerData>();
    @Override
    public void SetWalkthroughWindow(WalkthroughWindow window)
    {
        m_walkthroughWindow = window;
    }
    @Override
    public boolean WaitForPanelClose()
    {
        return true;
    }
    @Override
    public void InitControls()
    {
        TreeMap<String, PlayerData> players = GetMapData().GetPlayersData();
        for (PlayerData player : players.values())
        {
            int index = player.GetOrderIndex();
            while (m_players.containsKey(Integer.toString(index)))
            {
                index++;
            }
            player.SetOrderIndex(index);
            m_players.put(Integer.toString(index), player);
        }

        UpdatePlayerList();
    }
    private void UpdatePlayerList()
    {
        int lastAddedIndex = 0;
        for (PlayerData player : m_players.values())
        {
            if (player.GetOrderIndex() > lastAddedIndex)
            {
                player.SetOrderIndex(lastAddedIndex + 1);
                lastAddedIndex = lastAddedIndex + 1;
            }
            else if (player.GetOrderIndex() < lastAddedIndex)
            {
                player.SetOrderIndex(lastAddedIndex - 1);
                lastAddedIndex = lastAddedIndex - 1;
            }
        }
        CorrectPlayerListKeys();

        List<Object> list = new ArrayList<Object>();
        for(PlayerData player : m_players.values())
        {
            list.add(Integer.toString(player.GetOrderIndex()) + ". " + player.GetName());
        }
        v_playerList.setListData(list.toArray());
    }
    private void CorrectPlayerListKeys()
    {
        TreeMap<String, PlayerData> newPlayers = new TreeMap<String, PlayerData>();
        for (PlayerData player : m_players.values())
        {
            newPlayers.put(Integer.toString(player.GetOrderIndex()), player);
        }
        m_players = newPlayers;
    }
    @Override
    public void ProcessControlContentToMapData()
    {
        TreeMap<String, PlayerData> players = new TreeMap<String, PlayerData>();
        for(PlayerData player : m_players.values())
        {
            players.put(player.GetName(), player);
        }
        GetMapData().SetPlayersData(players);
    }
    @Override
    public MapData GetMapData()
    {
        return m_walkthroughWindow.GetProject().GetMapData();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        v_playerList = new javax.swing.JList();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        v_downButton = new javax.swing.JButton();
        v_upButton = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(723, 352));

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance().getContext().getResourceMap(Segment2Step3ContentPanel_All.class);
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        v_playerList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        v_playerList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        v_playerList.setName("v_playerList"); // NOI18N
        jScrollPane1.setViewportView(v_playerList);

        jPanel1.setName("jPanel1"); // NOI18N
        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.LINE_AXIS));

        jPanel2.setName("jPanel2"); // NOI18N

        v_downButton.setText(resourceMap.getString("v_downButton.text")); // NOI18N
        v_downButton.setName("v_downButton"); // NOI18N
        v_downButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                v_downButtonActionPerformed(evt);
            }
        });

        v_upButton.setText(resourceMap.getString("v_upButton.text")); // NOI18N
        v_upButton.setName("v_upButton"); // NOI18N
        v_upButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                v_upButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(v_upButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(v_downButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(v_upButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(v_downButton)
                .addContainerGap())
        );

        jPanel1.add(jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void v_upButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_v_upButtonActionPerformed
    {//GEN-HEADEREND:event_v_upButtonActionPerformed
        if (v_playerList.getSelectedIndex() < 0)
            return;
        PlayerData player = m_players.get(Integer.toString(v_playerList.getSelectedIndex()));
        PlayerData player2 = m_players.get(Integer.toString(v_playerList.getSelectedIndex() - 1));
        player2.SetOrderIndex(v_playerList.getSelectedIndex());
        player.SetOrderIndex(v_playerList.getSelectedIndex() - 1);
        m_players.put(Integer.toString(v_playerList.getSelectedIndex()), player2);
        m_players.put(Integer.toString(v_playerList.getSelectedIndex() - 1), player);

        UpdatePlayerList();

        v_playerList.setSelectedIndex(player.GetOrderIndex());
    }//GEN-LAST:event_v_upButtonActionPerformed
    private void v_downButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_v_downButtonActionPerformed
    {//GEN-HEADEREND:event_v_downButtonActionPerformed
        if (v_playerList.getSelectedIndex() < 0)
            return;
        PlayerData player = m_players.get(Integer.toString(v_playerList.getSelectedIndex()));
        PlayerData player2 = m_players.get(Integer.toString(v_playerList.getSelectedIndex() + 1));
        player2.SetOrderIndex(v_playerList.getSelectedIndex());
        player.SetOrderIndex(v_playerList.getSelectedIndex() + 1);
        m_players.put(Integer.toString(v_playerList.getSelectedIndex()), player2);
        m_players.put(Integer.toString(v_playerList.getSelectedIndex() + 1), player);

        UpdatePlayerList();
        
        v_playerList.setSelectedIndex(player.GetOrderIndex());
    }//GEN-LAST:event_v_downButtonActionPerformed
    private String RetrieveInputString(String message, Object initialValue)
    {
        String result = JOptionPane.showInputDialog(null, message, initialValue);
        return result;
    }
    private boolean confirm(String question)
    {
        int rVal = JOptionPane.showConfirmDialog(JOptionPane.getFrameForComponent(this), question, "Question", JOptionPane.OK_CANCEL_OPTION);
        return rVal == JOptionPane.OK_OPTION;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton v_downButton;
    private javax.swing.JList v_playerList;
    private javax.swing.JButton v_upButton;
    // End of variables declaration//GEN-END:variables

}
